package ru.job4j.polymorph;

public interface Vehicle extends Fuel {

    int WHEELS = 4;

    void accelerate();

    void brake();

    void steer();

    void changeGear();

    /**
     * - Статические методы.
     * Главная их особенность - они принадлежат только интерфейсу, в котором объявлены, и не
     * наследуются ни классами, реализующими интерфейс, ни интерфейсами-наследниками.
     * Для вызова метода, определенного как static, нужно указать имя интерфейса и через точку
     * название метода.
     * Статические методы можно применять, когда вы хотите сохранить какие-то данные на уровне
     * интерфейса, а уже эти данные могут быть использованы любым классом-реализацией при
     * необходимости.
     */
    static void getDragCoefficient() {
        System.out
                .println("Формула расчета коэффициента аэродинамического сопротивления автомобиля");
    }

    /**
     * - Дефолтные методы - так же, как и статические, они имеют реализацию, но при их объявлении
     * используется ключевое слово default.
     * Главное отличие дефолтного метода в том, что он будет унаследован классом, который
     * реализует данный интерфейс. При этом класс может как переопределить данный метод, так и не
     * переопределять и воспользоваться реализацией по умолчанию.
     */
    default void chargeBattery() {
        System.out.println("Аккумулятор под капотом. Зарядить.");
    }
}
